env:
  global:
    - DOCKER_BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
    - DOCKER_BRANCH=${DOCKER_BRANCH//[\@\/]/-}
    - TESTS_TYPE=${TESTS_TYPE}
    - TEST_TAG=${TEST_TAG}
    - BRANCH_WITH_FULL_TESTS=master
    - APP_REPO=js-payments
    - APP_BRANCH=$DOCKER_BRANCH
language: node_js
node_js:
  - 10
services:
  - docker
install: skip
before_script:
  - git clone --branch=feature/STJS-464-wiremock --single-branch --depth=1 https://github.com/SecureTrading/py-payments-testing.git
  - docker-compose -f py-payments-testing/docker-compose.yml pull
  - docker-compose -f py-payments-testing/docker-compose.yml up -d
jobs:
  include:
    - stage: Unit tests & Docker build
      name: Unit tests
      before_script: skip
      script:
        - npm install
        - npm run coverage
        - npm run snyk
    - name: Build docker
      before_script: skip
        - docker build . --tag "securetrading1/js-payments-card:$DOCKER_BRANCH"
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker push "securetrading1/js-payments-card:$DOCKER_BRANCH"
    - stage: Behavioral test
      name: Sample tests
      if: env(TESTS_TYPE)=fullTest OR env(TESTS_TYPE)=smokeTest OR branch = env(BRANCH_WITH_FULL_TESTS)
      script: docker-compose -f py-payments-testing/docker-compose.yml run tests poetry run behave features
#    - name: 'Behavioural test: chrome 76, Windows 10'
#      if: env(TESTS_TYPE)=fullTest OR env(TESTS_TYPE)=smokeTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos=Windows -Dos_version=10 -Dbrowser=chrome -Dbrowser_version=76.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: chrome 75, Windows 8.1'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos=Windows -Dos_version=8.1 -Dbrowser=chrome -Dbrowser_version=75.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: chrome 76, Windows 8'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos=Windows -Dos_version=8 -Dbrowser=chrome -Dbrowser_version=76.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: chrome 76, OS X Mojave'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos="OS X" -Dos_version=Mojave -Dbrowser=chrome -Dbrowser_version=76.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: chrome 75, OS X High Sierra'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos="OS X" -Dos_version="High Sierra" -Dbrowser=chrome -Dbrowser_version=75.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: chrome 76, OS X Sierra'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos="OS X" -Dos_version=Sierra -Dbrowser=chrome -Dbrowser_version=76.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: firefox 68, Windows 10'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos=Windows -Dos_version=10 -Dbrowser=Firefox -Dbrowser_version=68.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: firefox 67, Windows 8.1'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos=Windows -Dos_version=8.1 -Dbrowser=Firefox -Dbrowser_version=67.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: firefox 68, OS X Mojave'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos="OS X" -Dos_version=Mojave -Dbrowser=Firefox -Dbrowser_version=68.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: firefox 67, OS X High Sierra'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos="OS X" -Dos_version="High Sierra" -Dbrowser=Firefox -Dbrowser_version=67.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: firefox 68, OS X Sierra'
#      if: branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos="OS X" -Dos_version=Sierra -Dbrowser=Firefox -Dbrowser_version=68.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: ie 11, Windows 10'
#      if: env(TESTS_TYPE)=fullTest OR env(TESTS_TYPE)=smokeTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos=Windows -Dos_version=10 -Dbrowser=IE -Dbrowser_version=11.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: edge 18, Windows 10'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos=Windows -Dos_version=10 -Dbrowser=Edge -Dbrowser_version=18.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: edge 17, Windows 10'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos=Windows -Dos_version=10 -Dbrowser=Edge -Dbrowser_version=17.0 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: safari 12.1, OS X Mojave'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos="OS X" -Dos_version=Mojave -Dbrowser=Safari -Dbrowser_version=12.1 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: safari 11.1, OS X High Sierra'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Dos="OS X" -Dos_version="High Sierra" -Dbrowser=Safari -Dbrowser_version=11.1 -Dresolution=1920x1080 -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Samsung Galaxy Note 9, Android 8.1'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Samsung Galaxy Note 9" -Dos_version=8.1 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Samsung Galaxy S9, Android 8.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Samsung Galaxy S9" -Dos_version=8.0 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Samsung Galaxy S9 Plus, Android 9.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Samsung Galaxy S9 Plus" -Dos_version=9.0 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Samsung Galaxy S8, Android 7.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Samsung Galaxy S8" -Dos_version=7.0 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Samsung Galaxy S7, Android 6.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Samsung Galaxy S7" -Dos_version=6.0 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Samsung Galaxy Tab S3, Android 7.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Samsung Galaxy Tab S3" -Dos_version=7.0 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Google Pixel 3, Android 9.0'
#      if: env(TESTS_TYPE)=fullTestv
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Google Pixel 3" -Dos_version=9.0 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Google Pixel, Android 8.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Google Pixel" -Dos_version=8.0 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Google Nexus 6, Android 6.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Google Nexus 6" -Dos_version=6.0 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Google Nexus 9, Android 5.1'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Google Nexus 9" -Dos_version=5.1 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: Google Nexus 5, Android 4.4'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="Google Nexus 5" -Dos_version=4.4 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: iPhone XS, iOS 12.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="iPhone XS" -Dos_version=12 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: iPhone XS Max, iOS 12.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="iPhone XS Max" -Dos_version=12 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: iPhone XR, iOS 12.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="iPhone XR" -Dos_version=12 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: iPhone X, iOS 11.0'
#      if: env(TESTS_TYPE)=fullTest OR env(TESTS_TYPE)=smokeTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="iPhone X" -Dos_version=11 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: iPhone 8, iOS 11.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="iPhone 8" -Dos_version=11 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: iPhone SE, iOS 11.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="iPhone SE" -Dos_version=11 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
#    - name: 'Behavioural test: iPad Mini 4, iOS 11.0'
#      if: env(TESTS_TYPE)=fullTest OR branch = env(BRANCH_WITH_FULL_TESTS)
#      script:
#        - npm run behave -- mvn install -DLOCAL=true -Ddevice="iPad Mini 4" -Dos_version=11 -Dreal_mobile=true -Dcucumber.options="--tags $TEST_TAG"
after_success:
  - cat ./coverage/lcov.info | coveralls
addons:
  browserstack:
    forcelocal: true
    username:
      secure: gqmH3YaHQw+ggkVIl+FYmKdblYlrjQBbHHsMpNI3afFtms3Kwug2qjT59vQBnnVsHAuSJx7Af+/7xk52oRIUeiylkmZfvgelergOcI+Pzs2/rbLhmdaXcQyXijzCWkF+iVBZL3MXm1QjukoYkVQXSiwVDa3bMf5MXfjXp3UJH/AgR/rlTTDbHFCAemdQY6H6JTgD+qPmZtT72duKQVGX6sZKvRxFNMPpgwYvPYMsjfzmdJmUWE7FzvGJN/357NZYZPLV/Xc7WD1W1LFDzavlFS1j6u+UTlZMBIq2/lbThBeY7WjoGb7eTYMDnV3oaScg7fssJESa3MgU4tXPW9NL7o1w8ihzjv2e4rvK8k1xfbOTDlwKJ+GvVv4YOjmt2T2G2mq7c5GxWdvNIi3r7CCmalv3cHUVKirUZuVu9lpwf4ec4pDnf4iwXIIQOosK0wb0m0OO0uoLdx8vESNUTY+oIQaUyHaR8xJs0KH4TO8pXLYi3pAIEz1GIbejQqctLRuKWwElwqh0hKaDJ/7+38yQUm7UCI1jR1IjPiVtWSMo3QeRtVH+YCX+fI7o1sqpxS/nREn4aa7YhMpfHYY/oFHe3FlSYgTtdp+icvBV/qAxWEh5yyepL2VeoblgbZJA/yWm1G5ISA906ZZuLNyaracYs3+XGQFpnfR082xYE8OZx7M=
    access_key:
      secure: Ve3TJXy4GrvlU1H6wy/3QPDPObiOl6AlH5fyQbiTygfsQq7xFTqFLYHjgn4ikzPF5u9lQ3F83NXm8A3OsxropNB3DdTpNlg4faqjiQkiyR+rom2QUe7n0gYzTKOeM5/qIZL67wSfYKYKIjP+vlbgUwn+BAUOT68rTYZ5+5WnihxcREgs4UrmYDfekMtPrm8uHPp0HItCOnrinMIyqtLNddp9ytMidkREVvepffQ/4Zs/5n7jD17o7Ut6+nKaNY0iFIVv9TwSEbI++2U1BDFgzxm3vzGpt3Zg+mwPK7C3Q9rI4vjquN9v2R4XsLxmkzWciZLFbysodOMoyEO96piekI34aLYA0zJr5eMZYGjfvRnzS0cScZlyuzddGp/KjMocuwd1B0mrN6gl5oploEelSCHIAFc8xJkW8wi6bS1ivSeZ5IAKR3RDpfXxzP8jT8EWlPbumeauOB5U0T4f1Xz9x93LJnFk8HKyja9GIboxZ+lw6cTmrgAHTUssx/S+MbJxzxr5MPG0Ubqlh92HvqSFbiKzC8m/p0ZVnU/HLfDdB7yz+qJ5/PY4G2k5o82qNAvpjWpaKNibW/bMivgXtPU7hTTmihZsa/Q8JTvjOZcnSp6e+9AAKB5FaioFqvSii319NMuuTlyKXOEPk79OwSHNWFg7iPG6BPVwPXwiR3X8x+s=
  hosts:
    - webservices.securetrading.net
    - merchant.example.com
    - thirdparty.example.com
